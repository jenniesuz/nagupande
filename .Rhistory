resids <- numeric(ncolumns)
sim.1.means <- matrix(ncol=ncolumns,nrow=69)
for (i in 1:ncolumns){
temp <- cbind.data.frame(sim.results.1a[,i],sim.results.1a$month)
names(temp) <- c("count","month")
temp2 <- ddply(temp,.(month),summarise,mean=mean(count,na.rm=T))
#relcount <- temp[,2]/max(temp[,2])*100
sim.1.means[,i] <- temp2[,2]
resids[i] <- sum((log(observed+1) - log(temp2[,2]+1))^2)
}
resids.params <- cbind.data.frame(resids,param.values.2[2:6])
names(resids.params) <- c("resids","system","distance","probfeed",
"daystostarve","maxpupae")
open <- resids.params[resids.params$system %in% "false",]
closed <- resids.params[resids.params$system %in% "true",]
closed.sims <- sim.results.1a[,resids.params$system %in% "true"]
open.sims <- sim.results.1a[,resids.params$system %in% "false"]
return(list(open,closed,closed.sims,open.sims))
}
summary.1 <- summarise.func(sim.results.1,ncolumns=12)
summary.2 <- summarise.func(sim.results.2,ncolumns=12)
summary.3 <- summarise.func(sim.results.3,ncolumns=12)
summary.4 <- summarise.func(sim.results.4,ncolumns=12)
summary.5 <- summarise.func(sim.results.5,ncolumns=12)
summary.6 <- summarise.func(sim.results.6,ncolumns=12)
summary.7 <- summarise.func(sim.results.7,ncolumns=12)
summary.8 <- summarise.func(sim.results.8,ncolumns=12)
summary.9 <- summarise.func(sim.results.9,ncolumns=12)
summary.10 <- summarise.func(sim.results.10,ncolumns=12)
mean.resids.open <- rowMeans(data.frame(summary.1[[1]][1]
,summary.2[[1]][1]
,summary.3[[1]][1]
,summary.4[[1]][1]
,summary.5[[1]][1]
,summary.6[[1]][1]
,summary.7[[1]][1]
,summary.8[[1]][1]
,summary.9[[1]][1]
,summary.10[[1]][1]
))
open.1 <- summary.1[[4]][2]
open.2 <- summary.2[[4]][2]
open.3 <- summary.3[[4]][2]
open.4 <- summary.4[[4]][2]
open.5 <- summary.5[[4]][2]
open.6 <- summary.6[[4]][2]
open.7 <- summary.7[[4]][2]
open.8 <- summary.8[[4]][2]
open.9 <- summary.9[[4]][2]
open.10 <- summary.10[[4]][2]
all.open <- cbind.data.frame(open.1,open.2,open.3,open.4,open.5,open.6,open.7)
openmeans <- rowMeans(all.open)
mean.resids.closed <- rowMeans(data.frame(summary.1[[2]][1]
,summary.2[[2]][1]
,summary.3[[2]][1]
,summary.4[[2]][1]
,summary.5[[2]][1]
,summary.6[[2]][1]
,summary.7[[2]][1]
))
closed.1 <- summary.1[[3]][2]
closed.2 <- summary.2[[3]][2]
closed.3 <- summary.3[[3]][2]
closed.4 <- summary.4[[3]][2]
closed.5 <- summary.5[[3]][2]
closed.6 <- summary.6[[3]][2]
closed.7 <- summary.7[[3]][2]
all.closed <- cbind.data.frame(closed.1,closed.2,closed.3,closed.4,closed.5,closed.6,closed.7)
closedmeans <- rowMeans(all.closed)
mean.resids.open
mean.resids.closed
source("r_fig_5_simulate_ibm.R")
library("rJava")
library("RNetLogo")
p.names <- c("model-host-decline","closed-system","distance-move","prob-feed","days-to-starve"
,"dd-coef"
)
reps <- 1
param.values.2 <- expand.grid("model-host-decline" = "true"
,"closed-system" = c("true","false")
#,"distance-move" = c(0.25,0.5,0.75,1,1.25,1.5)
,"distance-move" = c(0.5)
,"prob-feed" = 0.135
,"days-to-starve" = 6
,"dd-coef" = 0.00001
)
p.names <- c("model-host-decline","closed-system","distance-move","prob-feed","days-to-starve"
,"dd-coef"
)
reps <- 1
param.values.2 <- expand.grid("model-host-decline" = "true"
,"closed-system" = c("true","false")
#,"distance-move" = c(0.25,0.5,0.75,1,1.25,1.5)
,"distance-move" = c(0.5)
,"prob-feed" = 0.135
,"days-to-starve" = 6
,"dd-coef" = 0.00001
)
gui <- T
nl.path <- "C:/Program Files (x86)/NetLogo 5.1.0"
model.path <- "C:/Users/Jennifer.Lord/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
cl <- makeCluster(processors)
clusterEvalQ(cl, library(RNetLogo))
invisible(parLapply(cl, 1:processors, prepro, gui=gui,
nl.path=nl.path, model.path=model.path))
invisible(parLapply(cl, 1:processors, postpro))
stopCluster(cl)
library("reshape")
library("rJava")
library("RNetLogo")
library("RNetLogo")
p.names <- c("model-host-decline","closed-system","distance-move","prob-feed","days-to-starve"
,"dd-coef"
)
reps <- 1
param.values.2 <- expand.grid("model-host-decline" = "true"
,"closed-system" = c("true","false")
#,"distance-move" = c(0.25,0.5,0.75,1,1.25,1.5)
,"distance-move" = c(0.5)
,"prob-feed" = 0.135
,"days-to-starve" = 6
,"dd-coef" = 0.00001
)
gui <- T
nl.path <- "C:/Program Files (x86)/NetLogo 5.1.0"
model.path <- "C:/Users/Jennifer.Lord/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
cl <- makeCluster(processors)
source("r_fig_5_simulate_ibm.R")
cl <- makeCluster(processors)
clusterEvalQ(cl, library(RNetLogo))
invisible(parLapply(cl, 1:processors, prepro, gui=gui,
nl.path=nl.path, model.path=model.path))
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
cl <- makeCluster(processors)
clusterEvalQ(cl, library(RNetLogo))
invisible(parLapply(cl, 1:processors, prepro, gui=gui,
nl.path=nl.path, model.path=model.path))
source("r_fig_5_simulate_ibm.R")
library("rJava")
library("RNetLogo")
p.names <- c("model-host-decline","closed-system","distance-move","prob-feed","days-to-starve"
,"dd-coef"
)
reps <- 1
param.values.2 <- expand.grid("model-host-decline" = "true"
,"closed-system" = c("true","false")
#,"distance-move" = c(0.25,0.5,0.75,1,1.25,1.5)
,"distance-move" = c(0.5)
,"prob-feed" = 0.135
,"days-to-starve" = 6
,"dd-coef" = 0.00001
)
gui <- T
nl.path <- "C:/Program Files (x86)/NetLogo 5.1.0"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
#model.path <- "C:/Users/Jennifer.Lord/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
cl <- makeCluster(processors)
clusterEvalQ(cl, library(RNetLogo))
invisible(parLapply(cl, 1:processors, prepro, gui=gui,
nl.path=nl.path, model.path=model.path))
system('java -version')
nl.path <- "C:/Program Files/NetLogo 6.0.1"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
stopCluster(cl)
cl <- makeCluster(processors)
clusterEvalQ(cl, library(RNetLogo))
invisible(parLapply(cl, 1:processors, prepro, gui=gui,
nl.path=nl.path, model.path=model.path))
stopCluster(cl)
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
#model.path <- "C:/Users/Jennifer.Lord/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
cl <- makeCluster(processors)
clusterEvalQ(cl, library(RNetLogo))
invisible(parLapply(cl, 1:processors, prepro, gui=gui,
nl.path=nl.path, model.path=model.path))
stopCluster(cl)
NLStart(nl.path,nl.obj="nagupande")
NLLoadModel(model.path,nl.obj="nagupande")
NLStart(getwd())
NLQuit("nagupande")
NLQuit("nagupande")
NLStart(getwd())
nl.path <- "C:/Program Files/NetLogo 6.0.1"
NLStart(nl.path,nl.obj="nagupande")
NLQuit("nagupande")
NLStart(nl.path,nl.obj="nagupande")
source("r_fig_5_simulate_ibm.R")
library("rJava")
library("RNetLogo")
p.names <- c("model-host-decline","closed-system","distance-move","prob-feed","days-to-starve"
,"dd-coef"
)
reps <- 1
param.values.2 <- expand.grid("model-host-decline" = "true"
,"closed-system" = c("true","false")
#,"distance-move" = c(0.25,0.5,0.75,1,1.25,1.5)
,"distance-move" = c(0.5)
,"prob-feed" = 0.135
,"days-to-starve" = 6
,"dd-coef" = 0.00001
)
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
NLStart(nl.path,nl.obj="nagupande")
nl.path <- "C:/Program Files/NetLogo 6.0.1/app"
NLStart(nl.path,nl.obj="nagupande")
source("r_fig_5_simulate_ibm.R")
library("rJava")
library("RNetLogo")
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1/app"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
NLStart(nl.path,nl.obj="nagupande")
source("r_fig_5_simulate_ibm.R")
library("rJava")
library("RNetLogo")
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
#model.path <- "C:/Users/Jennifer.Lord/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
NLStart(nl.path,nl.obj="nagupande")
source("r_fig_5_simulate_ibm.R")
library("rJava")
library("RNetLogo")
p.names <- c("model-host-decline","closed-system","distance-move","prob-feed","days-to-starve"
,"dd-coef"
)
reps <- 1
param.values.2 <- expand.grid("model-host-decline" = "true"
,"closed-system" = c("true","false")
#,"distance-move" = c(0.25,0.5,0.75,1,1.25,1.5)
,"distance-move" = c(0.5)
,"prob-feed" = 0.135
,"days-to-starve" = 6
,"dd-coef" = 0.00001
)
gui <- T
nl.path <- "C:/Program Files (x86)/NetLogo 5.1.0"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
#mode
NLStart(nl.path,nl.obj="nagupande")
source("r_fig_5_simulate_ibm.R")
library("rJava")
library("RNetLogo")
p.names <- c("model-host-decline","closed-system","distance-move","prob-feed","days-to-starve"
,"dd-coef"
)
reps <- 1
param.values.2 <- expand.grid("model-host-decline" = "true"
,"closed-system" = c("true","false")
#,"distance-move" = c(0.25,0.5,0.75,1,1.25,1.5)
,"distance-move" = c(0.5)
,"prob-feed" = 0.135
,"days-to-starve" = 6
,"dd-coef" = 0.00001
)
gui <- T
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
#model.pa
NLStart(nl.path,nl.obj="nagupande")
install.packages("rJava")
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
#model.pa
source("r_fig_5_simulate_ibm.R")
library("rJava")
library("RNetLogo")
source("r_fig_5_simulate_ibm.R")
library("rJava")
library("RNetLogo")
install.packages("rJava")
library("rJava")
library("RNetLogo")
p.names <- c("model-host-decline","closed-system","distance-move","prob-feed","days-to-starve"
,"dd-coef"
)
reps <- 1
param.values.2 <- expand.grid("model-host-decline" = "true"
,"closed-system" = c("true","false")
#,"distance-move" = c(0.25,0.5,0.75,1,1.25,1.5)
,"distance-move" = c(0.5)
,"prob-feed" = 0.135
,"days-to-starve" = 6
,"dd-coef" = 0.00001
)
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
#mo
NLStart(nl.path,nl.obj="nagupande")
.jinit()
.jcall("java/lang/System", "S", "getProperty", "java.runtime.version")
I
library("rJava")
.jinit()
.jcall("java/lang/System", "S", "getProperty", "java.runtime.version")
I
source("r_fig_5_simulate_ibm.R")
library("rJava")
library("RNetLogo")
nl.path <- "C:/Program Files/NetLogo 6.0.1"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
NLStart(nl.path,nl.obj="nagupande")
system.file("jri",package="rJava")
NLStart(nl.path,nl.obj="nagupande",nl.jarname = 'netlogo-6.0.0.jar')
source("r_fig_5_simulate_ibm.R")
library("rJava")
library("RNetLogo")
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
NLStart(nl.path,nl.obj="nagupande",nl.jarname = 'netlogo-6.0.0.jar')
NLStart(nl.path,nl.obj="nagupande",nl.jarname = 'netlogo-6.0.1.jar')
source("r_fig_5_simulate_ibm.R")
library("rJava")
library("RNetLogo")
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
#model.path <- "C:/Users/Jennifer.Lord/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
NLStart(nl.path,nl.obj="nagupande",nl.jarname = 'netlogo-6.0.1.jar')
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1/jar"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
#model.
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1/jar"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
#model.
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1/jar"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
#model.path <- "C:/Users/Jennifer.Lord/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
NLStart(nl.path,nl.obj="nagupande",nl.jarname = 'netlogo-6.0.1.jar')
source("r_fig_5_simulate_ibm.R")
library("rJava")
library("RNetLogo")
NLStart(nl.path,nl.obj="nagupande",nl.jarname = 'netlogo-6.0.1.jar')
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1/app"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
#model.pa
NLStart(nl.path,nl.obj="nagupande",nl.jarname = 'netlogo-6.0.1.jar')
NLQuit()
NLQuit(nagupande)
NLQuit("nagupande")
.jinit()
s <- .jnew("java/lang/String", "testingJava")
s
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
#model.path <- "C:/Users/Jennifer.Lord/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
NLStart(nl.path,nl.obj="nagupande",nl.jarname = 'netlogo-6.0.1.jar')
NLQuit("nagupande")
NLStart(nl.path,nl.obj="nagupande",nl.jarname = 'netlogo-6.0.1.jar')
rm(list=ls())
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
#model.path <- "C:/Users/Jennifer.Lord/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
source("r_fig_5_simulate_ibm.R")
library("rJava")
library("RNetLogo")
NLStart(nl.path,nl.obj="nagupande",nl.jarname = 'netlogo-6.0.1.jar')
source("r_fig_5_simulate_ibm.R")
library("rJava")
library("RNetLogo")
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
#model.path <- "C:/Users/Jennifer.Lord/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
NLStart(nl.path,nl.obj="nagupande",nl.jarname = 'netlogo-6.0.1.jar')
source("r_fig_5_simulate_ibm.R")
library("rJava")
library("RNetLogo")
gui <- T
nl.path <- "C:/Program Files/NetLogo 6.0.1/app"
model.path <- "C:/Users/Jennie/Documents/Github/tsetse2016/Manuscript/figures_r_code/nagupande.nlogo"
#model.path <- "C:/
NLStart(nl.path,nl.obj="nagupande",nl.jarname = 'netlogo-6.0.1.jar')
NLLoadModel(model.path,nl.obj="nagupande")
NLQuit("nagupande")
library("plyr")
dat <- read.csv("nagupande_data_R.csv") # read in dataset
names(dat)
# columns
# nagupande: mean monthly G. morsitans counts at Nagupande
# lusulu: mean monthly G. morsitans counts at Lusulu control site
# animal columns: numbers killed each month
dat$time <- seq(15,69*30,30) # create column of estimated times (days) taking the middle of each month
#*********
temp <- read.csv("lusulu_temperature_R.csv") # read in dataset
day.means <- ddply(temp,.(month,year,day),summarise,day.mean=(ctmax + ctmin)/2)
day.months <- ddply(day.means,.(year,month),summarise,mean_temp=(mean(day.mean)))
# Phelps and Burrows (1969)
temp <- read.csv("lusulu_temp_phelpsburrows_R.csv")
temp <- temp[c(1:9),]
# all temps
mean.temp <- rbind.data.frame(temp,day.months)
no.data <- rep(NA,15)
mean.temp <- c(no.data,mean.temp$mean_temp[1:22])
dat <- cbind.data.frame(dat,mean.temp)
length(no.data)
length(mean.temp)
length(dat)
11+37
dat
48-37
no.data <- rep(NA,15)
mean.temp <- c(no.data,mean.temp$mean_temp[1:22])
mean.temp <- rbind.data.frame(temp,day.months)
mean.temp
no.data <- rep(NA,15)
mean.temp <- c(no.data,mean.temp$mean_temp[1:22])
dat <- cbind.data.frame(dat,mean.temp)
mean.temp
temp <- read.csv("lusulu_temperature_R.csv") # read in dataset
day.means <- ddply(temp,.(month,year,day),summarise,day.mean=(ctmax + ctmin)/2)
day.months <- ddply(day.means,.(year,month),summarise,mean_temp=(mean(day.mean)))
# Phelps and Burrows (1969)
temp <- read.csv("lusulu_temp_phelpsburrows_R.csv")
temp <- temp[c(1:9),]
# all temps
mean.temp <- rbind.data.frame(temp,day.months)
#*******combine with tsetse and host data*******************************
mean.temp
23+15
length*dat
length(dat)
dat <- read.csv("nagupande_data_R.csv") # read in dataset
names(dat)
# columns
# nagupande: mean monthly G. morsitans counts at Nagupande
# lusulu: mean monthly G. morsitans counts at Lusulu control site
# animal columns: numbers killed each month
dat$time <- seq(15,69*30,30) # create column of estimated times (days) taking the middle of each month
length(dat[,1])
temp <- read.csv("lusulu_temperature_R.csv") # read in dataset
day.means <- ddply(temp,.(month,year,day),summarise,day.mean=(ctmax + ctmin)/2)
day.months <- ddply(day.means,.(year,month),summarise,mean_temp=(mean(day.mean)))
# Phelps and Burrows (1969)
temp <- read.csv("lusulu_temp_phelpsburrows_R.csv")
temp <- temp[c(1:9),]
# all temps
mean.temp <- rbind.data.frame(temp,day.months)
#*******combine with tsetse and host data*******************************
length(mean.temp[,1])
dat
mean.temp
temp <- read.csv("lusulu_temperature_R.csv") # read in dataset
day.means <- ddply(temp,.(month,year,day),summarise,day.mean=(ctmax + ctmin)/2)
day.months <- ddply(day.means,.(year,month),summarise,mean_temp=(mean(day.mean)))
# Phelps and Burrows (1969)
temp <- read.csv("lusulu_temp_phelpsburrows_R.csv")
temp <- temp[c(1:9),]
# all temps
mean.temp <- rbind.data.frame(temp,day.months)
mean.temp
View(dat)
no.data <- rep(NA,15)
mean.temp <- c(no.data,mean.temp$mean_temp[1:22])
dat <- cbind.data.frame(dat[16:38,],mean.temp)
mean.temp <- rbind.data.frame(temp,day.months)
#*******combine with tsetse and host data*******************************
# first 15 months no temperature data for
#no.data <- rep(NA,15)
#mean.temp <- c(no.data,mean.temp$mean_temp[1:22])
dat <- cbind.data.frame(dat[16:38,],mean.temp)
#********************view tsetse count data*******
par(mar=c(5,5,2,2))
plot(dat$time, dat$nagupande,pch=19,col="#990000",bty="n",type="n", cex.main=0.8,
xlab="Day of study",ylab="Number of tsetse",ylim=c(100,1600))
lines(dat$time,dat$lusulu,col="#fc8d59",pch=19)
abline(v=285)
par(new = T)
plot(dat$time, dat$mean.temp, type="l", axes=F, xlab=NA, ylab=NA,lwd=1)
axis(side = 4)
mtext(side = 4, line = 3, 'Mean monthly temperature',cex=0.8)
legend("bottomleft",
legend=c("Tsetse at control site","Tsetse at Nagupande"),
pch=c(16,16), col=c("#fc8d59", "#990000"),
bty="n",cex=0.8)
par(mar=c(5,5,2,2))
plot(dat$time, dat$nagupande,pch=19,col="#990000",bty="n",type="n", cex.main=0.8,
xlab="Day of study",ylab="Number of tsetse",ylim=c(100,1600))
names(dat)
lines(dat$time,dat$lusulu,col="#fc8d59",pch=19)
par(new = T)
plot(dat$time, dat$mean.temp, type="l", axes=F, xlab=NA, ylab=NA,lwd=1)
mean.temp
dat$mean_temp
par(mar=c(5,5,2,2))
plot(dat$time, dat$nagupande,pch=19,col="#990000",bty="n",type="n", cex.main=0.8,
xlab="Day of study",ylab="Number of tsetse",ylim=c(100,1600))
lines(dat$time,dat$lusulu,col="#fc8d59",pch=19)
abline(v=285)
par(new = T)
plot(dat$time, dat$mean_temp, type="l", axes=F, xlab=NA, ylab=NA,lwd=1)
axis(side = 4)
require(deSolve)
require(bbmle)
source("r_data.R") # containing host and tsetse data for Lusulu and Nagupande
tot.kill <- dat$tot_kill[!dat$tot_kill %in% NA] # all months
tot.kill.1 <- tot.kill[]
tot.kill.2 <- tot.kill[-c(1:2)] # without first two months
